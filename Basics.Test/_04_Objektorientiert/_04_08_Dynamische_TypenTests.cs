using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Diagnostics;

namespace Basics.Test._04_Objektorientiert
{
    public class Person
    {
        public string Name { get; set; }
    }

    public class Schlachtschiff
    {
        public string Name { get; set; }
        public int AnzLeben { get; set; }
    }

    [TestClass]
    public class _04_08_Dynamische_TypenTests
    {
        public bool execForDyn(dynamic Figur)
        {
            try
            {
                Figur.Name = "Anton";
                Figur.AnzLeben = 99;

                var X = Figur.AnzLeben;
                //Debug.WriteLine("X= " + X.ToString());
            }
            catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException rex)
            {
                Debug.WriteLine("RuntimeBinderException!!");
                return false;
            }
            catch (Exception ex)
            {
                Debug.WriteLine("Exception!!: " + ex.Message);
                return false;
            }

            return true;
        }

        public string ToStringDyn(dynamic Figur)
        {
            try
            {
                string txt = Figur.Name + ", AnzLeben: " + Figur.AnzLeben.ToString();
                return txt;
            }
            catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException rex)
            {
                Debug.WriteLine("RuntimeBinderException!!");
                return "";
            }
            catch (Exception ex)
            {
                Debug.WriteLine("Exception!!: " + ex.Message);
                return "";
            }


        }

        public bool execForDynklassisch(object Figur)
        {
            try
            {
                if (Figur is Schlachtschiff)
                {
                    var schiff = Figur as Schlachtschiff;
                    schiff.Name = "Anton";
                    schiff.AnzLeben = 99;
                }
                else if (Figur is Person)
                {
                    var person = Figur as Person;
                    person.Name = "Anton";
                }
            }
            catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException rex)
            {
                Debug.WriteLine("RuntimeBinderException!!");
                return false;
            }
            catch (Exception ex)
            {
                Debug.WriteLine("Exception!!: " + ex.Message);
                return false;
            }

            return true;
        }


        [TestMethod]
        public void TestMethod1()
        {
            var Anton = new Person()
            {
                Name = "Anton"
            };

            var Bismarck = new Schlachtschiff()
            {
                Name = "Bismarck",
                AnzLeben = 100
            };
            Assert.AreEqual("Bismarck, AnzLeben: 100", ToStringDyn(Bismarck));



            var mig21 = new { Name = "MIG21", AnzLeben = 9 };

            // Testen der Methodenaufrufe für verschieden Objekttypen
            Assert.IsTrue(execForDyn(Bismarck));

            // Hier wird zur Laufzeit ein Fehler auftreten, da Anton
            // nicht die Erwartete Eigenschaft AnzLeben besitzt
            // -> Parameter vom Typ dynamic
            Assert.IsFalse(execForDyn(Anton));

            Assert.AreEqual("", ToStringDyn(mig21));
            Assert.IsTrue(execForDynklassisch(mig21));


        }
    }
}
